{"ast":null,"code":"// frontend/src/services/apiService.js\nimport axios from \"axios\";\n\n// The base URL will be proxied to your backend server (e.g., http://localhost:5001)\n// during development, thanks to the \"proxy\" setting in package.json.\n// In production, you'd configure your web server (like Nginx) to handle this.\nconst API_BASE_URL = \"/api\"; // Uses the proxy\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// --- About ---\nexport const getAboutInfo = async () => {\n  try {\n    const response = await apiClient.get(\"/about\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching about info:\", error);\n    // Return a default structure or throw the error for the component to handle\n    return {\n      name: \"Error Loading Name\",\n      bio: \"Could not load bio. Please check API connection.\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      profileImageUrl: \"https://placehold.co/300x300/FF0000/FFFFFF?text=Error\",\n      socialLinks: [],\n      skills: []\n    };\n  }\n};\n\n// --- Projects ---\nexport const getProjects = async () => {\n  try {\n    const response = await apiClient.get(\"/projects\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching projects:\", error);\n    return []; // Return empty array on error\n  }\n};\nexport const getProjectById = async id => {\n  try {\n    const response = await apiClient.get(`/projects/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching project with id ${id}:`, error);\n    return null; // Return null or throw\n  }\n};\n\n// --- Resume ---\nexport const getResumeItems = async (category = null) => {\n  try {\n    const url = category ? `/resume?category=${category}` : \"/resume\";\n    const response = await apiClient.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching resume items:\", error);\n    return [];\n  }\n};\n\n// --- Contact ---\nexport const submitContactForm = async contactData => {\n  try {\n    const response = await apiClient.post(\"/contact\", contactData);\n    return response.data; // Should include { success: true, message: '...' }\n  } catch (error) {\n    console.error(\"Error submitting contact form:\", error);\n    // Check if error.response exists for more detailed error info from backend\n    if (error.response && error.response.data) {\n      return {\n        success: false,\n        message: error.response.data.message || \"Submission failed. Please try again.\"\n      };\n    }\n    return {\n      success: false,\n      message: \"Submission failed due to a network or server error.\"\n    };\n  }\n};\n\n// You can add more functions here for POST, PUT, DELETE if you build an admin interface.\n// For example:\n// export const createProject = async (projectData) => {\n//   const response = await apiClient.post('/projects', projectData);\n//   return response.data;\n// };","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","getAboutInfo","response","get","data","error","console","name","bio","email","phone","location","profileImageUrl","socialLinks","skills","getProjects","getProjectById","id","getResumeItems","category","url","submitContactForm","contactData","post","success","message"],"sources":["/Users/fm/nfpatrick.com/frondend/src/services/apiService.js"],"sourcesContent":["// frontend/src/services/apiService.js\nimport axios from \"axios\";\n\n// The base URL will be proxied to your backend server (e.g., http://localhost:5001)\n// during development, thanks to the \"proxy\" setting in package.json.\n// In production, you'd configure your web server (like Nginx) to handle this.\nconst API_BASE_URL = \"/api\"; // Uses the proxy\n\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// --- About ---\nexport const getAboutInfo = async () => {\n  try {\n    const response = await apiClient.get(\"/about\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching about info:\", error);\n    // Return a default structure or throw the error for the component to handle\n    return {\n      name: \"Error Loading Name\",\n      bio: \"Could not load bio. Please check API connection.\",\n      email: \"\",\n      phone: \"\",\n      location: \"\",\n      profileImageUrl: \"https://placehold.co/300x300/FF0000/FFFFFF?text=Error\",\n      socialLinks: [],\n      skills: [],\n    };\n  }\n};\n\n// --- Projects ---\nexport const getProjects = async () => {\n  try {\n    const response = await apiClient.get(\"/projects\");\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching projects:\", error);\n    return []; // Return empty array on error\n  }\n};\n\nexport const getProjectById = async (id) => {\n  try {\n    const response = await apiClient.get(`/projects/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching project with id ${id}:`, error);\n    return null; // Return null or throw\n  }\n};\n\n// --- Resume ---\nexport const getResumeItems = async (category = null) => {\n  try {\n    const url = category ? `/resume?category=${category}` : \"/resume\";\n    const response = await apiClient.get(url);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching resume items:\", error);\n    return [];\n  }\n};\n\n// --- Contact ---\nexport const submitContactForm = async (contactData) => {\n  try {\n    const response = await apiClient.post(\"/contact\", contactData);\n    return response.data; // Should include { success: true, message: '...' }\n  } catch (error) {\n    console.error(\"Error submitting contact form:\", error);\n    // Check if error.response exists for more detailed error info from backend\n    if (error.response && error.response.data) {\n      return {\n        success: false,\n        message:\n          error.response.data.message || \"Submission failed. Please try again.\",\n      };\n    }\n    return {\n      success: false,\n      message: \"Submission failed due to a network or server error.\",\n    };\n  }\n};\n\n// You can add more functions here for POST, PUT, DELETE if you build an admin interface.\n// For example:\n// export const createProject = async (projectData) => {\n//   const response = await apiClient.post('/projects', projectData);\n//   return response.data;\n// };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}